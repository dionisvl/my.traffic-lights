services:
  traefik:
    image: traefik:v3.2.5
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--log.level=WARN"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-admin@tlg.site.example}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.format=json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./logs/traefik:/var/log/traefik"
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik-tlg.site.example`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
    restart: unless-stopped

  fe:
    build:
      target: prod
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE=${NUXT_PUBLIC_API_BASE:-https://api-tlg.site.example}
      - NUXT_PUBLIC_WS_URL=${NUXT_PUBLIC_WS_URL:-wss://api-tlg.site.example}
    expose:
      - "3000"
    volumes:
      - ./questions:/app/questions:ro
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front-http.rule=Host(`tlg.site.example`)"
      - "traefik.http.routers.front-http.entrypoints=web"
      - "traefik.http.routers.front-http.middlewares=front-https-redirect"
      - "traefik.http.middlewares.front-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.front.rule=Host(`tlg.site.example`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=myresolver"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.front-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.front-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.front-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.front-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.front-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.front-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.front-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.front-compress.compress=true"
      - "traefik.http.routers.front.middlewares=front-headers,front-compress"
    depends_on:
      - be
    restart: unless-stopped

  be:
    build:
      target: prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://user:password@db:5432/game_db}
      - QUESTIONS_DIR=${QUESTIONS_DIR:-/app/questions}
    expose:
      - "4000"
    volumes:
      - ./questions:/app/questions:ro
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-http.rule=Host(`api-tlg.site.example`)"
      - "traefik.http.routers.api-http.entrypoints=web"
      - "traefik.http.routers.api-http.middlewares=api-https-redirect"
      - "traefik.http.middlewares.api-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.api.rule=Host(`api-tlg.site.example`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=4000"
      - "traefik.http.middlewares.api-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.api-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.api-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.api-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.api-rl.ratelimit.average=50"
      - "traefik.http.middlewares.api-rl.ratelimit.burst=100"
      - "traefik.http.routers.api.middlewares=api-headers,api-rl"
    depends_on:
      - db
    restart: unless-stopped

  db:
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-game_db}
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  traefik_letsencrypt:
